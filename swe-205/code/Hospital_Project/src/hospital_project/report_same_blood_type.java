
/*
 * Class name : report_same_blood_type.java
 *
 * Created on Jun 11, 2009, 2:04:39 PM
 *
 * Last Modified on June 12, 2009
 *
 * Why was this class created?
 * This GUI interface will allow the admin to generate a report of patient's with
 * the same blood type.
 */

package hospital_project;

import java.io.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author  MHYS Software Productions. CopyrightÂ©. All rights unreserved.
 */
public class report_same_blood_type extends javax.swing.JFrame {

    /** Creates new form report_same_blood_type */
    public report_same_blood_type() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     *
     * Note from author: This code has been generated automatically from NETBEANS.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea_report = new javax.swing.JTextArea();
        button_generateReport = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textField_bloodType = new javax.swing.JTextField();
        button_printReport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Heriditary Blood Disorder Center HBDC");
        setBounds(new java.awt.Rectangle(200, 0, 0, 0));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Patient Report - Same Blood Type", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 1, 24), new java.awt.Color(0, 102, 153))); // NOI18N

        textArea_report.setColumns(20);
        textArea_report.setEditable(false);
        textArea_report.setRows(5);
        jScrollPane1.setViewportView(textArea_report);

        button_generateReport.setText("Generate Report");
        button_generateReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_generateReportActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Enter the blood type:");

        button_printReport.setText("Print Report");
        button_printReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_printReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(button_generateReport)
                    .addComponent(button_printReport, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                    .addComponent(textField_bloodType, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {button_generateReport, button_printReport});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textField_bloodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(button_generateReport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_printReport)))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_generateReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_generateReportActionPerformed

        String blood = textField_bloodType.getText().trim();
        textArea_report.append("\nBlood type" + "\t" + "Patient Name" + "\t" + "Patient History" + "\n\n");
        if(blood.equals("")){
            JOptionPane.showMessageDialog(null, "Field is blank.\nPlease enter a blood type.","Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
                ArrayList<Patient> pat = new ArrayList<Patient>();

                pat = Control.importPatientDatabase();
                System.out.println(pat);
                for(Patient p:pat){
                    if(blood.equals(p.getBloodType())){
                        textArea_report.append(p.getBloodType() + "\t" + p.getName() + "\t" + p.getPatientHistory() + "\n" );
                    }
                }

            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null, "Unexpected Error.\nCould not generate report.","Error", JOptionPane.ERROR_MESSAGE);
            }
        }
}//GEN-LAST:event_button_generateReportActionPerformed

    private void button_printReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_printReportActionPerformed

        String blood = textField_bloodType.getText().trim();

        PrintWriter output=null;

     	try
     	{
     		output=new PrintWriter(new File(blood + ".txt"));
     	}
     	catch(FileNotFoundException e)
     	{
     		JOptionPane.showMessageDialog(null, "Unable to create report.", "Error", JOptionPane.ERROR_MESSAGE);
     	}

        ArrayList<Patient> pat = new ArrayList<Patient>();
        pat = Control.importPatientDatabase();

        output.println("Blood Type" + "\t" + "File Number" + "\t" + "Patient Name" + "\t" + "Patient History" + "\n\n");

		for(Patient p:pat)
      	{
      		if(blood.equals(p.getBloodType())){
      		
      			output.print(p.getBloodType() + "\t" + p.getFileNumber()+ "\t" + p.getName() + "\t" + p.getPatientHistory());
      			output.println();
      		}
      		
      	}
      	output.close();
        JOptionPane.showMessageDialog(null, "Report has been generated.\n Check file - " + blood + ".txt to print it.");
	
}//GEN-LAST:event_button_printReportActionPerformed

    /**
    * @param args the command line arguments
     * Note from author: This code has been generated automatically from NETBEANS.
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new report_same_blood_type().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_generateReport;
    private javax.swing.JButton button_printReport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea textArea_report;
    private javax.swing.JTextField textField_bloodType;
    // End of variables declaration//GEN-END:variables

}
